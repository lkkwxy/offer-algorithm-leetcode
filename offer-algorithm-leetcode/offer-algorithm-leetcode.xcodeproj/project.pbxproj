// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		81654A2625351AE400848BEF /* 剑指 Offer 06. 从尾到头打印链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81654A2525351AE400848BEF /* 剑指 Offer 06. 从尾到头打印链表.swift */; };
		81654A302536792D00848BEF /* 剑指 Offer 07. 重建二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81654A2F2536792D00848BEF /* 剑指 Offer 07. 重建二叉树.swift */; };
		816F1BA1254D857800D0EE5D /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift in Sources */ = {isa = PBXBuildFile; fileRef = 816F1BA0254D857800D0EE5D /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */; };
		816F1BA4254D8A4200D0EE5D /* 剑指 Offer 35. 复杂链表的复制.swift in Sources */ = {isa = PBXBuildFile; fileRef = 816F1BA3254D8A4200D0EE5D /* 剑指 Offer 35. 复杂链表的复制.swift */; };
		816F1BA7254DAA0A00D0EE5D /* 剑指 Offer 37. 序列化二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 816F1BA6254DAA0A00D0EE5D /* 剑指 Offer 37. 序列化二叉树.swift */; };
		81BF2CC12546457100F2E47E /* 剑指 Offer 09. 用两个栈实现队列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CC02546457100F2E47E /* 剑指 Offer 09. 用两个栈实现队列.swift */; };
		81BF2CC42547199C00F2E47E /* 剑指 Offer 12. 矩阵中的路径.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CC32547199C00F2E47E /* 剑指 Offer 12. 矩阵中的路径.swift */; };
		81BF2CC725471E2D00F2E47E /* 剑指 Offer 11. 旋转数组的最小数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CC625471E2D00F2E47E /* 剑指 Offer 11. 旋转数组的最小数字.swift */; };
		81BF2CCA25471E7900F2E47E /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CC925471E7900F2E47E /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift */; };
		81BF2CCE25471EE700F2E47E /* 剑指 Offer 10- I. 斐波那契数列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CCD25471EE700F2E47E /* 剑指 Offer 10- I. 斐波那契数列.swift */; };
		81BF2CDF25486FE000F2E47E /* 剑指 Offer 15. 二进制中1的个数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CDE25486FE000F2E47E /* 剑指 Offer 15. 二进制中1的个数.swift */; };
		81BF2CE3254B045800F2E47E /* 剑指 Offer 26. 树的子结构 .swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CE2254B045800F2E47E /* 剑指 Offer 26. 树的子结构 .swift */; };
		81BF2CE6254B0DA000F2E47E /* 剑指 Offer 27. 二叉树的镜像.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CE5254B0DA000F2E47E /* 剑指 Offer 27. 二叉树的镜像.swift */; };
		81BF2CE9254B0EF200F2E47E /* 剑指 Offer 28. 对称的二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CE8254B0EF200F2E47E /* 剑指 Offer 28. 对称的二叉树.swift */; };
		81BF2CEC254B155500F2E47E /* 剑指 Offer 29. 顺时针打印矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CEB254B155500F2E47E /* 剑指 Offer 29. 顺时针打印矩阵.swift */; };
		81CE52FC254E6D830065FA24 /* 剑指 Offer 36. 二叉搜索树与双向链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81CE52FB254E6D830065FA24 /* 剑指 Offer 36. 二叉搜索树与双向链表.swift */; };
		81CE52FF254E79D50065FA24 /* 剑指 Offer 38. 字符串的排列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81CE52FE254E79D50065FA24 /* 剑指 Offer 38. 字符串的排列.swift */; };
		81CE5302254E8A6A0065FA24 /* 剑指 Offer 40. 最小的k个数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81CE5301254E8A6A0065FA24 /* 剑指 Offer 40. 最小的k个数.swift */; };
		81CE5305254EDD500065FA24 /* 剑指 Offer 42. 连续子数组的最大和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81CE5304254EDD500065FA24 /* 剑指 Offer 42. 连续子数组的最大和.swift */; };
		81E1557E255224B700FB7360 /* 剑指 Offer 50. 第一个只出现一次的字符.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E1557D255224B700FB7360 /* 剑指 Offer 50. 第一个只出现一次的字符.swift */; };
		81E155812552F1C300FB7360 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E155802552F1C300FB7360 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift */; };
		81E155842552F75E00FB7360 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E155832552F75E00FB7360 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.swift */; };
		81E1558A2552F93200FB7360 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E155892552F93200FB7360 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift */; };
		81E1558D2552FE3B00FB7360 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E1558C2552FE3B00FB7360 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */; };
		F840C4C5254C1658008DDFC4 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F840C4C4254C1658008DDFC4 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift */; };
		F840C52D254F9E01008DDFC4 /* 剑指 Offer 41. 数据流中的中位数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F840C52C254F9E01008DDFC4 /* 剑指 Offer 41. 数据流中的中位数.swift */; };
		F840C530254FA5C3008DDFC4 /* 剑指 Offer 43. 1～n 整数中 1 出现的次数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F840C52F254FA5C3008DDFC4 /* 剑指 Offer 43. 1～n 整数中 1 出现的次数.swift */; };
		F840C533254FB17D008DDFC4 /* 剑指 Offer 44. 数字序列中某一位的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F840C532254FB17D008DDFC4 /* 剑指 Offer 44. 数字序列中某一位的数字.swift */; };
		F84D770C254A983E00CD31E0 /* 剑指 Offer 20. 表示数值的字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D770B254A983E00CD31E0 /* 剑指 Offer 20. 表示数值的字符串.swift */; };
		F84D776D254AC66200CD31E0 /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D776C254AC66200CD31E0 /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift */; };
		F84D7770254AD76000CD31E0 /* 剑指 Offer 22. 链表中倒数第k个节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D776F254AD76000CD31E0 /* 剑指 Offer 22. 链表中倒数第k个节点.swift */; };
		F84D7773254ADF2300CD31E0 /* 剑指 Offer 24. 反转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D7772254ADF2300CD31E0 /* 剑指 Offer 24. 反转链表.swift */; };
		F84D7776254AE22E00CD31E0 /* 剑指 Offer 25. 合并两个排序的链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D7775254AE22E00CD31E0 /* 剑指 Offer 25. 合并两个排序的链表.swift */; };
		F84D77D8254BAEF000CD31E0 /* 剑指 Offer 30. 包含min函数的栈.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D77D7254BAEF000CD31E0 /* 剑指 Offer 30. 包含min函数的栈.swift */; };
		F84D77DB254BB2F600CD31E0 /* 剑指 Offer 31. 栈的压入、弹出序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D77DA254BB2F600CD31E0 /* 剑指 Offer 31. 栈的压入、弹出序列.swift */; };
		F84D783F254BCA2E00CD31E0 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D783E254BCA2E00CD31E0 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift */; };
		F84D7843254BCB0500CD31E0 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D7842254BCB0500CD31E0 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift */; };
		F84D7846254BCC9B00CD31E0 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D7845254BCC9B00CD31E0 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.swift */; };
		F84D7849254BDCB100CD31E0 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D7848254BDCB100CD31E0 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */; };
		F866C15B25315A8A00D2F02C /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866C15A25315A8A00D2F02C /* main.swift */; };
		F866C16325315AF600D2F02C /* 剑指 Offer 03. 数组中重复的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866C16225315AF600D2F02C /* 剑指 Offer 03. 数组中重复的数字.swift */; };
		F866C1C3253183FD00D2F02C /* 剑指 Offer 04. 二维数组中的查找.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866C1C2253183FD00D2F02C /* 剑指 Offer 04. 二维数组中的查找.swift */; };
		F866C1C82531930F00D2F02C /* 剑指 Offer 05. 替换空格.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866C1C72531930F00D2F02C /* 剑指 Offer 05. 替换空格.swift */; };
		F89021B1254FC21900984069 /* 剑指 Offer 45. 把数组排成最小的数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F89021B0254FC21900984069 /* 剑指 Offer 45. 把数组排成最小的数.swift */; };
		F8AB65D32550087A005D0EC4 /* 剑指 Offer 46. 把数字翻译成字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB65D22550087A005D0EC4 /* 剑指 Offer 46. 把数字翻译成字符串.swift */; };
		F8AB65DF2550F19A005D0EC4 /* 剑指 Offer 47. 礼物的最大价值.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB65DE2550F19A005D0EC4 /* 剑指 Offer 47. 礼物的最大价值.swift */; };
		F8AB65E22550F498005D0EC4 /* 剑指 Offer 48. 最长不含重复字符的子字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB65E12550F498005D0EC4 /* 剑指 Offer 48. 最长不含重复字符的子字符串.swift */; };
		F8AB65ED25513ACC005D0EC4 /* 剑指 Offer 49. 丑数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB65EC25513ACC005D0EC4 /* 剑指 Offer 49. 丑数.swift */; };
		F8AB662325523FDB005D0EC4 /* 剑指 Offer 51. 数组中的逆序对.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB662225523FDB005D0EC4 /* 剑指 Offer 51. 数组中的逆序对.swift */; };
		F8AB67A025541B26005D0EC4 /* 剑指 Offer 55 - I. 二叉树的深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB679F25541B26005D0EC4 /* 剑指 Offer 55 - I. 二叉树的深度.swift */; };
		F8AB67A325541C9D005D0EC4 /* 剑指 Offer 55 - II. 平衡二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB67A225541C9D005D0EC4 /* 剑指 Offer 55 - II. 平衡二叉树.swift */; };
		F8F8729D254838F60040A8B0 /* 剑指 Offer 13. 机器人的运动范围.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F8729C254838F60040A8B0 /* 剑指 Offer 13. 机器人的运动范围.swift */; };
		F8F872A025483D3A0040A8B0 /* 剑指 Offer 14- I. 剪绳子.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F8729F25483D3A0040A8B0 /* 剑指 Offer 14- I. 剪绳子.swift */; };
		F8F872A3254841150040A8B0 /* 剑指 Offer 14- II. 剪绳子 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F872A2254841150040A8B0 /* 剑指 Offer 14- II. 剪绳子 II.swift */; };
		F8F872AB25490B4E0040A8B0 /* 剑指 Offer 16. 数值的整数次方.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F872AA25490B4E0040A8B0 /* 剑指 Offer 16. 数值的整数次方.swift */; };
		F8F872AE25490C8D0040A8B0 /* 剑指 Offer 17. 打印从1到最大的n位数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F872AD25490C8D0040A8B0 /* 剑指 Offer 17. 打印从1到最大的n位数.swift */; };
		F8F872B225490F7D0040A8B0 /* 剑指 Offer 18. 删除链表的节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F872B125490F7D0040A8B0 /* 剑指 Offer 18. 删除链表的节点.swift */; };
		F8F872B5254918E80040A8B0 /* 剑指 Offer 19. 正则表达式匹配.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F872B4254918E80040A8B0 /* 剑指 Offer 19. 正则表达式匹配.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		F866C15525315A8A00D2F02C /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		81654A2525351AE400848BEF /* 剑指 Offer 06. 从尾到头打印链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 06. 从尾到头打印链表.swift"; sourceTree = "<group>"; };
		81654A2F2536792D00848BEF /* 剑指 Offer 07. 重建二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 07. 重建二叉树.swift"; sourceTree = "<group>"; };
		816F1BA0254D857800D0EE5D /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 34. 二叉树中和为某一值的路径.swift"; sourceTree = "<group>"; };
		816F1BA3254D8A4200D0EE5D /* 剑指 Offer 35. 复杂链表的复制.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 35. 复杂链表的复制.swift"; sourceTree = "<group>"; };
		816F1BA6254DAA0A00D0EE5D /* 剑指 Offer 37. 序列化二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 37. 序列化二叉树.swift"; sourceTree = "<group>"; };
		81BF2CC02546457100F2E47E /* 剑指 Offer 09. 用两个栈实现队列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 09. 用两个栈实现队列.swift"; sourceTree = "<group>"; };
		81BF2CC32547199C00F2E47E /* 剑指 Offer 12. 矩阵中的路径.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 12. 矩阵中的路径.swift"; sourceTree = "<group>"; };
		81BF2CC625471E2D00F2E47E /* 剑指 Offer 11. 旋转数组的最小数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 11. 旋转数组的最小数字.swift"; sourceTree = "<group>"; };
		81BF2CC925471E7900F2E47E /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 10- II. 青蛙跳台阶问题.swift"; sourceTree = "<group>"; };
		81BF2CCD25471EE700F2E47E /* 剑指 Offer 10- I. 斐波那契数列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 10- I. 斐波那契数列.swift"; sourceTree = "<group>"; };
		81BF2CDE25486FE000F2E47E /* 剑指 Offer 15. 二进制中1的个数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 15. 二进制中1的个数.swift"; sourceTree = "<group>"; };
		81BF2CE2254B045800F2E47E /* 剑指 Offer 26. 树的子结构 .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 26. 树的子结构 .swift"; sourceTree = "<group>"; };
		81BF2CE5254B0DA000F2E47E /* 剑指 Offer 27. 二叉树的镜像.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 27. 二叉树的镜像.swift"; sourceTree = "<group>"; };
		81BF2CE8254B0EF200F2E47E /* 剑指 Offer 28. 对称的二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 28. 对称的二叉树.swift"; sourceTree = "<group>"; };
		81BF2CEB254B155500F2E47E /* 剑指 Offer 29. 顺时针打印矩阵.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 29. 顺时针打印矩阵.swift"; sourceTree = "<group>"; };
		81CE52FB254E6D830065FA24 /* 剑指 Offer 36. 二叉搜索树与双向链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 36. 二叉搜索树与双向链表.swift"; sourceTree = "<group>"; };
		81CE52FE254E79D50065FA24 /* 剑指 Offer 38. 字符串的排列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 38. 字符串的排列.swift"; sourceTree = "<group>"; };
		81CE5301254E8A6A0065FA24 /* 剑指 Offer 40. 最小的k个数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 40. 最小的k个数.swift"; sourceTree = "<group>"; };
		81CE5304254EDD500065FA24 /* 剑指 Offer 42. 连续子数组的最大和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 42. 连续子数组的最大和.swift"; sourceTree = "<group>"; };
		81E1557D255224B700FB7360 /* 剑指 Offer 50. 第一个只出现一次的字符.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 50. 第一个只出现一次的字符.swift"; sourceTree = "<group>"; };
		81E155802552F1C300FB7360 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 52. 两个链表的第一个公共节点.swift"; sourceTree = "<group>"; };
		81E155832552F75E00FB7360 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 53 - I. 在排序数组中查找数字 I.swift"; sourceTree = "<group>"; };
		81E155892552F93200FB7360 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 53 - II. 0～n-1中缺失的数字.swift"; sourceTree = "<group>"; };
		81E1558C2552FE3B00FB7360 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 54. 二叉搜索树的第k大节点.swift"; sourceTree = "<group>"; };
		F840C4C4254C1658008DDFC4 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 39. 数组中出现次数超过一半的数字.swift"; sourceTree = "<group>"; };
		F840C52C254F9E01008DDFC4 /* 剑指 Offer 41. 数据流中的中位数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 41. 数据流中的中位数.swift"; sourceTree = "<group>"; };
		F840C52F254FA5C3008DDFC4 /* 剑指 Offer 43. 1～n 整数中 1 出现的次数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 43. 1～n 整数中 1 出现的次数.swift"; sourceTree = "<group>"; };
		F840C532254FB17D008DDFC4 /* 剑指 Offer 44. 数字序列中某一位的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 44. 数字序列中某一位的数字.swift"; sourceTree = "<group>"; };
		F84D770B254A983E00CD31E0 /* 剑指 Offer 20. 表示数值的字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 20. 表示数值的字符串.swift"; sourceTree = "<group>"; };
		F84D776C254AC66200CD31E0 /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift"; sourceTree = "<group>"; };
		F84D776F254AD76000CD31E0 /* 剑指 Offer 22. 链表中倒数第k个节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 22. 链表中倒数第k个节点.swift"; sourceTree = "<group>"; };
		F84D7772254ADF2300CD31E0 /* 剑指 Offer 24. 反转链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 24. 反转链表.swift"; sourceTree = "<group>"; };
		F84D7775254AE22E00CD31E0 /* 剑指 Offer 25. 合并两个排序的链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 25. 合并两个排序的链表.swift"; sourceTree = "<group>"; };
		F84D77D7254BAEF000CD31E0 /* 剑指 Offer 30. 包含min函数的栈.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 30. 包含min函数的栈.swift"; sourceTree = "<group>"; };
		F84D77DA254BB2F600CD31E0 /* 剑指 Offer 31. 栈的压入、弹出序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 31. 栈的压入、弹出序列.swift"; sourceTree = "<group>"; };
		F84D783E254BCA2E00CD31E0 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 - I. 从上到下打印二叉树.swift"; sourceTree = "<group>"; };
		F84D7842254BCB0500CD31E0 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 - II. 从上到下打印二叉树 II.swift"; sourceTree = "<group>"; };
		F84D7845254BCC9B00CD31E0 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 - III. 从上到下打印二叉树 III.swift"; sourceTree = "<group>"; };
		F84D7848254BDCB100CD31E0 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 33. 二叉搜索树的后序遍历序列.swift"; sourceTree = "<group>"; };
		F866C15725315A8A00D2F02C /* offer-algorithm-leetcode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "offer-algorithm-leetcode"; sourceTree = BUILT_PRODUCTS_DIR; };
		F866C15A25315A8A00D2F02C /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		F866C16225315AF600D2F02C /* 剑指 Offer 03. 数组中重复的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 03. 数组中重复的数字.swift"; sourceTree = "<group>"; };
		F866C1C2253183FD00D2F02C /* 剑指 Offer 04. 二维数组中的查找.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 04. 二维数组中的查找.swift"; sourceTree = "<group>"; };
		F866C1C72531930F00D2F02C /* 剑指 Offer 05. 替换空格.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 05. 替换空格.swift"; sourceTree = "<group>"; };
		F89021B0254FC21900984069 /* 剑指 Offer 45. 把数组排成最小的数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 45. 把数组排成最小的数.swift"; sourceTree = "<group>"; };
		F8AB65D22550087A005D0EC4 /* 剑指 Offer 46. 把数字翻译成字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 46. 把数字翻译成字符串.swift"; sourceTree = "<group>"; };
		F8AB65DE2550F19A005D0EC4 /* 剑指 Offer 47. 礼物的最大价值.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 47. 礼物的最大价值.swift"; sourceTree = "<group>"; };
		F8AB65E12550F498005D0EC4 /* 剑指 Offer 48. 最长不含重复字符的子字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 48. 最长不含重复字符的子字符串.swift"; sourceTree = "<group>"; };
		F8AB65EC25513ACC005D0EC4 /* 剑指 Offer 49. 丑数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 49. 丑数.swift"; sourceTree = "<group>"; };
		F8AB662225523FDB005D0EC4 /* 剑指 Offer 51. 数组中的逆序对.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 51. 数组中的逆序对.swift"; sourceTree = "<group>"; };
		F8AB679F25541B26005D0EC4 /* 剑指 Offer 55 - I. 二叉树的深度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 55 - I. 二叉树的深度.swift"; sourceTree = "<group>"; };
		F8AB67A225541C9D005D0EC4 /* 剑指 Offer 55 - II. 平衡二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 55 - II. 平衡二叉树.swift"; sourceTree = "<group>"; };
		F8F8729C254838F60040A8B0 /* 剑指 Offer 13. 机器人的运动范围.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 13. 机器人的运动范围.swift"; sourceTree = "<group>"; };
		F8F8729F25483D3A0040A8B0 /* 剑指 Offer 14- I. 剪绳子.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 14- I. 剪绳子.swift"; sourceTree = "<group>"; };
		F8F872A2254841150040A8B0 /* 剑指 Offer 14- II. 剪绳子 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 14- II. 剪绳子 II.swift"; sourceTree = "<group>"; };
		F8F872AA25490B4E0040A8B0 /* 剑指 Offer 16. 数值的整数次方.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 16. 数值的整数次方.swift"; sourceTree = "<group>"; };
		F8F872AD25490C8D0040A8B0 /* 剑指 Offer 17. 打印从1到最大的n位数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 17. 打印从1到最大的n位数.swift"; sourceTree = "<group>"; };
		F8F872B125490F7D0040A8B0 /* 剑指 Offer 18. 删除链表的节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 18. 删除链表的节点.swift"; sourceTree = "<group>"; };
		F8F872B4254918E80040A8B0 /* 剑指 Offer 19. 正则表达式匹配.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 19. 正则表达式匹配.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		F866C15425315A8A00D2F02C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		F866C14E25315A8A00D2F02C = {
			isa = PBXGroup;
			children = (
				F866C15925315A8A00D2F02C /* offer-algorithm-leetcode */,
				F866C15825315A8A00D2F02C /* Products */,
			);
			sourceTree = "<group>";
		};
		F866C15825315A8A00D2F02C /* Products */ = {
			isa = PBXGroup;
			children = (
				F866C15725315A8A00D2F02C /* offer-algorithm-leetcode */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		F866C15925315A8A00D2F02C /* offer-algorithm-leetcode */ = {
			isa = PBXGroup;
			children = (
				F866C15A25315A8A00D2F02C /* main.swift */,
				F866C16225315AF600D2F02C /* 剑指 Offer 03. 数组中重复的数字.swift */,
				F866C1C2253183FD00D2F02C /* 剑指 Offer 04. 二维数组中的查找.swift */,
				F866C1C72531930F00D2F02C /* 剑指 Offer 05. 替换空格.swift */,
				81654A2525351AE400848BEF /* 剑指 Offer 06. 从尾到头打印链表.swift */,
				81654A2F2536792D00848BEF /* 剑指 Offer 07. 重建二叉树.swift */,
				81BF2CC02546457100F2E47E /* 剑指 Offer 09. 用两个栈实现队列.swift */,
				81BF2CC32547199C00F2E47E /* 剑指 Offer 12. 矩阵中的路径.swift */,
				81BF2CC625471E2D00F2E47E /* 剑指 Offer 11. 旋转数组的最小数字.swift */,
				81BF2CC925471E7900F2E47E /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift */,
				81BF2CCD25471EE700F2E47E /* 剑指 Offer 10- I. 斐波那契数列.swift */,
				F8F8729C254838F60040A8B0 /* 剑指 Offer 13. 机器人的运动范围.swift */,
				F8F8729F25483D3A0040A8B0 /* 剑指 Offer 14- I. 剪绳子.swift */,
				F8F872A2254841150040A8B0 /* 剑指 Offer 14- II. 剪绳子 II.swift */,
				81BF2CDE25486FE000F2E47E /* 剑指 Offer 15. 二进制中1的个数.swift */,
				F8F872AA25490B4E0040A8B0 /* 剑指 Offer 16. 数值的整数次方.swift */,
				F8F872AD25490C8D0040A8B0 /* 剑指 Offer 17. 打印从1到最大的n位数.swift */,
				F8F872B125490F7D0040A8B0 /* 剑指 Offer 18. 删除链表的节点.swift */,
				F8F872B4254918E80040A8B0 /* 剑指 Offer 19. 正则表达式匹配.swift */,
				F84D770B254A983E00CD31E0 /* 剑指 Offer 20. 表示数值的字符串.swift */,
				F84D776C254AC66200CD31E0 /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift */,
				F84D776F254AD76000CD31E0 /* 剑指 Offer 22. 链表中倒数第k个节点.swift */,
				F84D7772254ADF2300CD31E0 /* 剑指 Offer 24. 反转链表.swift */,
				F84D7775254AE22E00CD31E0 /* 剑指 Offer 25. 合并两个排序的链表.swift */,
				81BF2CE2254B045800F2E47E /* 剑指 Offer 26. 树的子结构 .swift */,
				81BF2CE5254B0DA000F2E47E /* 剑指 Offer 27. 二叉树的镜像.swift */,
				81BF2CE8254B0EF200F2E47E /* 剑指 Offer 28. 对称的二叉树.swift */,
				81BF2CEB254B155500F2E47E /* 剑指 Offer 29. 顺时针打印矩阵.swift */,
				F84D77D7254BAEF000CD31E0 /* 剑指 Offer 30. 包含min函数的栈.swift */,
				F84D77DA254BB2F600CD31E0 /* 剑指 Offer 31. 栈的压入、弹出序列.swift */,
				F84D783E254BCA2E00CD31E0 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift */,
				F84D7842254BCB0500CD31E0 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift */,
				F84D7845254BCC9B00CD31E0 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.swift */,
				F84D7848254BDCB100CD31E0 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */,
				F840C4C4254C1658008DDFC4 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift */,
				816F1BA0254D857800D0EE5D /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */,
				816F1BA3254D8A4200D0EE5D /* 剑指 Offer 35. 复杂链表的复制.swift */,
				816F1BA6254DAA0A00D0EE5D /* 剑指 Offer 37. 序列化二叉树.swift */,
				81CE52FB254E6D830065FA24 /* 剑指 Offer 36. 二叉搜索树与双向链表.swift */,
				81CE52FE254E79D50065FA24 /* 剑指 Offer 38. 字符串的排列.swift */,
				81CE5301254E8A6A0065FA24 /* 剑指 Offer 40. 最小的k个数.swift */,
				81CE5304254EDD500065FA24 /* 剑指 Offer 42. 连续子数组的最大和.swift */,
				F840C52C254F9E01008DDFC4 /* 剑指 Offer 41. 数据流中的中位数.swift */,
				F840C52F254FA5C3008DDFC4 /* 剑指 Offer 43. 1～n 整数中 1 出现的次数.swift */,
				F840C532254FB17D008DDFC4 /* 剑指 Offer 44. 数字序列中某一位的数字.swift */,
				F89021B0254FC21900984069 /* 剑指 Offer 45. 把数组排成最小的数.swift */,
				F8AB65D22550087A005D0EC4 /* 剑指 Offer 46. 把数字翻译成字符串.swift */,
				F8AB65DE2550F19A005D0EC4 /* 剑指 Offer 47. 礼物的最大价值.swift */,
				F8AB65E12550F498005D0EC4 /* 剑指 Offer 48. 最长不含重复字符的子字符串.swift */,
				F8AB65EC25513ACC005D0EC4 /* 剑指 Offer 49. 丑数.swift */,
				81E1557D255224B700FB7360 /* 剑指 Offer 50. 第一个只出现一次的字符.swift */,
				81E155802552F1C300FB7360 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift */,
				F8AB662225523FDB005D0EC4 /* 剑指 Offer 51. 数组中的逆序对.swift */,
				81E155832552F75E00FB7360 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.swift */,
				81E155892552F93200FB7360 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift */,
				81E1558C2552FE3B00FB7360 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */,
				F8AB679F25541B26005D0EC4 /* 剑指 Offer 55 - I. 二叉树的深度.swift */,
				F8AB67A225541C9D005D0EC4 /* 剑指 Offer 55 - II. 平衡二叉树.swift */,
			);
			path = "offer-algorithm-leetcode";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		F866C15625315A8A00D2F02C /* offer-algorithm-leetcode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F866C15E25315A8A00D2F02C /* Build configuration list for PBXNativeTarget "offer-algorithm-leetcode" */;
			buildPhases = (
				F866C15325315A8A00D2F02C /* Sources */,
				F866C15425315A8A00D2F02C /* Frameworks */,
				F866C15525315A8A00D2F02C /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "offer-algorithm-leetcode";
			productName = "offer-algorithm-leetcode";
			productReference = F866C15725315A8A00D2F02C /* offer-algorithm-leetcode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		F866C14F25315A8A00D2F02C /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1200;
				LastUpgradeCheck = 1210;
				TargetAttributes = {
					F866C15625315A8A00D2F02C = {
						CreatedOnToolsVersion = 12.0;
					};
				};
			};
			buildConfigurationList = F866C15225315A8A00D2F02C /* Build configuration list for PBXProject "offer-algorithm-leetcode" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = F866C14E25315A8A00D2F02C;
			productRefGroup = F866C15825315A8A00D2F02C /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				F866C15625315A8A00D2F02C /* offer-algorithm-leetcode */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		F866C15325315A8A00D2F02C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F8F872A025483D3A0040A8B0 /* 剑指 Offer 14- I. 剪绳子.swift in Sources */,
				81BF2CE9254B0EF200F2E47E /* 剑指 Offer 28. 对称的二叉树.swift in Sources */,
				F8AB662325523FDB005D0EC4 /* 剑指 Offer 51. 数组中的逆序对.swift in Sources */,
				81E1557E255224B700FB7360 /* 剑指 Offer 50. 第一个只出现一次的字符.swift in Sources */,
				816F1BA7254DAA0A00D0EE5D /* 剑指 Offer 37. 序列化二叉树.swift in Sources */,
				F8AB67A025541B26005D0EC4 /* 剑指 Offer 55 - I. 二叉树的深度.swift in Sources */,
				81CE52FF254E79D50065FA24 /* 剑指 Offer 38. 字符串的排列.swift in Sources */,
				81BF2CDF25486FE000F2E47E /* 剑指 Offer 15. 二进制中1的个数.swift in Sources */,
				F8F872AB25490B4E0040A8B0 /* 剑指 Offer 16. 数值的整数次方.swift in Sources */,
				F840C533254FB17D008DDFC4 /* 剑指 Offer 44. 数字序列中某一位的数字.swift in Sources */,
				F8F872A3254841150040A8B0 /* 剑指 Offer 14- II. 剪绳子 II.swift in Sources */,
				F8AB67A325541C9D005D0EC4 /* 剑指 Offer 55 - II. 平衡二叉树.swift in Sources */,
				81654A2625351AE400848BEF /* 剑指 Offer 06. 从尾到头打印链表.swift in Sources */,
				F84D77D8254BAEF000CD31E0 /* 剑指 Offer 30. 包含min函数的栈.swift in Sources */,
				81BF2CC42547199C00F2E47E /* 剑指 Offer 12. 矩阵中的路径.swift in Sources */,
				F8AB65DF2550F19A005D0EC4 /* 剑指 Offer 47. 礼物的最大价值.swift in Sources */,
				F89021B1254FC21900984069 /* 剑指 Offer 45. 把数组排成最小的数.swift in Sources */,
				F84D783F254BCA2E00CD31E0 /* 剑指 Offer 32 - I. 从上到下打印二叉树.swift in Sources */,
				F8AB65ED25513ACC005D0EC4 /* 剑指 Offer 49. 丑数.swift in Sources */,
				F866C1C3253183FD00D2F02C /* 剑指 Offer 04. 二维数组中的查找.swift in Sources */,
				81654A302536792D00848BEF /* 剑指 Offer 07. 重建二叉树.swift in Sources */,
				F866C15B25315A8A00D2F02C /* main.swift in Sources */,
				F840C530254FA5C3008DDFC4 /* 剑指 Offer 43. 1～n 整数中 1 出现的次数.swift in Sources */,
				F84D776D254AC66200CD31E0 /* 剑指 Offer 21. 调整数组顺序使奇数位于偶数前面.swift in Sources */,
				F84D770C254A983E00CD31E0 /* 剑指 Offer 20. 表示数值的字符串.swift in Sources */,
				F84D7846254BCC9B00CD31E0 /* 剑指 Offer 32 - III. 从上到下打印二叉树 III.swift in Sources */,
				81E155812552F1C300FB7360 /* 剑指 Offer 52. 两个链表的第一个公共节点.swift in Sources */,
				F84D77DB254BB2F600CD31E0 /* 剑指 Offer 31. 栈的压入、弹出序列.swift in Sources */,
				81BF2CCA25471E7900F2E47E /* 剑指 Offer 10- II. 青蛙跳台阶问题.swift in Sources */,
				F8AB65D32550087A005D0EC4 /* 剑指 Offer 46. 把数字翻译成字符串.swift in Sources */,
				81BF2CC725471E2D00F2E47E /* 剑指 Offer 11. 旋转数组的最小数字.swift in Sources */,
				F866C1C82531930F00D2F02C /* 剑指 Offer 05. 替换空格.swift in Sources */,
				F866C16325315AF600D2F02C /* 剑指 Offer 03. 数组中重复的数字.swift in Sources */,
				81BF2CEC254B155500F2E47E /* 剑指 Offer 29. 顺时针打印矩阵.swift in Sources */,
				F8F8729D254838F60040A8B0 /* 剑指 Offer 13. 机器人的运动范围.swift in Sources */,
				81BF2CE3254B045800F2E47E /* 剑指 Offer 26. 树的子结构 .swift in Sources */,
				F84D7773254ADF2300CD31E0 /* 剑指 Offer 24. 反转链表.swift in Sources */,
				81E1558D2552FE3B00FB7360 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift in Sources */,
				81E1558A2552F93200FB7360 /* 剑指 Offer 53 - II. 0～n-1中缺失的数字.swift in Sources */,
				F840C4C5254C1658008DDFC4 /* 剑指 Offer 39. 数组中出现次数超过一半的数字.swift in Sources */,
				81BF2CC12546457100F2E47E /* 剑指 Offer 09. 用两个栈实现队列.swift in Sources */,
				81CE52FC254E6D830065FA24 /* 剑指 Offer 36. 二叉搜索树与双向链表.swift in Sources */,
				F8AB65E22550F498005D0EC4 /* 剑指 Offer 48. 最长不含重复字符的子字符串.swift in Sources */,
				81E155842552F75E00FB7360 /* 剑指 Offer 53 - I. 在排序数组中查找数字 I.swift in Sources */,
				F8F872B225490F7D0040A8B0 /* 剑指 Offer 18. 删除链表的节点.swift in Sources */,
				F84D7843254BCB0500CD31E0 /* 剑指 Offer 32 - II. 从上到下打印二叉树 II.swift in Sources */,
				F8F872AE25490C8D0040A8B0 /* 剑指 Offer 17. 打印从1到最大的n位数.swift in Sources */,
				F840C52D254F9E01008DDFC4 /* 剑指 Offer 41. 数据流中的中位数.swift in Sources */,
				81CE5302254E8A6A0065FA24 /* 剑指 Offer 40. 最小的k个数.swift in Sources */,
				F84D7770254AD76000CD31E0 /* 剑指 Offer 22. 链表中倒数第k个节点.swift in Sources */,
				F84D7776254AE22E00CD31E0 /* 剑指 Offer 25. 合并两个排序的链表.swift in Sources */,
				81CE5305254EDD500065FA24 /* 剑指 Offer 42. 连续子数组的最大和.swift in Sources */,
				816F1BA4254D8A4200D0EE5D /* 剑指 Offer 35. 复杂链表的复制.swift in Sources */,
				F84D7849254BDCB100CD31E0 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift in Sources */,
				F8F872B5254918E80040A8B0 /* 剑指 Offer 19. 正则表达式匹配.swift in Sources */,
				816F1BA1254D857800D0EE5D /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift in Sources */,
				81BF2CCE25471EE700F2E47E /* 剑指 Offer 10- I. 斐波那契数列.swift in Sources */,
				81BF2CE6254B0DA000F2E47E /* 剑指 Offer 27. 二叉树的镜像.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		F866C15C25315A8A00D2F02C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		F866C15D25315A8A00D2F02C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		F866C15F25315A8A00D2F02C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = HJF46GBGJQ;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		F866C16025315A8A00D2F02C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = HJF46GBGJQ;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		F866C15225315A8A00D2F02C /* Build configuration list for PBXProject "offer-algorithm-leetcode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F866C15C25315A8A00D2F02C /* Debug */,
				F866C15D25315A8A00D2F02C /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		F866C15E25315A8A00D2F02C /* Build configuration list for PBXNativeTarget "offer-algorithm-leetcode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F866C15F25315A8A00D2F02C /* Debug */,
				F866C16025315A8A00D2F02C /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = F866C14F25315A8A00D2F02C /* Project object */;
}
